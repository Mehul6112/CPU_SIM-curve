<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="mehul" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field79c5d16c">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field35bf32b4">
	</Field>
	<Field name="RR" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field102a49b1">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register4bb5b27f" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register264a99e0" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register1b8a0f31" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register688757c" />
	<Register name="FGI" width="1" initialValue="0" readOnly="false" id="model.module.Register60264bb4" />
	<Register name="FGO" width="1" initialValue="0" readOnly="false" id="model.module.Register7309cf24" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register7cf60803" />
	<Register name="IEN" width="1" initialValue="0" readOnly="false" id="model.module.Register3e034aec" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register322fb09d" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register4d3f2e94" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register3bf6caa1" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register2c30f57b" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register18de9c39" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register42de4529" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-OUT" bit="0" register="model.module.Register688757c" halt="false" id="model.module.ConditionBit29e7637d" />
	<ConditionBit name="HALT BIT" bit="0" register="model.module.Register18de9c39" halt="true" id="model.module.ConditionBit48f39991" />

	<!--............. rams ..........................-->
	<RAM name="RAM_1" length="4096" cellSize="16" id="model.module.RAM57b849e2" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<!-- none -->

	<!--............. increment .....................-->
	<!-- none -->

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<!-- none -->

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<!-- none -->

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<!-- none -->

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<!-- none -->

	<!--............. memory access .................-->
	<!-- none -->

	<!--............. end ...........................-->
	<End id="model.microinstruction.End488b3370" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="CLA" opcode="7800" instructionFormat="RR" assemblyFormat="RR" instructionColors="#e5c89a" assemblyColors="#e5c89a" >
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" instructionFormat="RR" assemblyFormat="RR" instructionColors="#d5a3c6" assemblyColors="#d5a3c6" >
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" instructionFormat="RR" assemblyFormat="RR" instructionColors="#accfa5" assemblyColors="#accfa5" >
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" instructionFormat="RR" assemblyFormat="RR" instructionColors="#fcdf8d" assemblyColors="#fcdf8d" >
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" instructionFormat="RR" assemblyFormat="RR" instructionColors="#babc99" assemblyColors="#babc99" >
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" instructionFormat="RR" assemblyFormat="RR" instructionColors="#b2dbc1" assemblyColors="#b2dbc1" >
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" instructionFormat="RR" assemblyFormat="RR" instructionColors="#f8e894" assemblyColors="#f8e894" >
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" instructionFormat="RR" assemblyFormat="RR" instructionColors="#ba8b80" assemblyColors="#ba8b80" >
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" instructionFormat="RR" assemblyFormat="RR" instructionColors="#92e19a" assemblyColors="#92e19a" >
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" instructionFormat="RR" assemblyFormat="RR" instructionColors="#92e287" assemblyColors="#92e287" >
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="7002" instructionFormat="RR" assemblyFormat="RR" instructionColors="#a6e3d7" assemblyColors="#a6e3d7" >
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" instructionFormat="RR" assemblyFormat="RR" instructionColors="#cacdbb" assemblyColors="#cacdbb" >
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#fef8be #f086e5" assemblyColors="#fef8be #f086e5" >
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#e7a2bd #f7cdd2" assemblyColors="#e7a2bd #f7cdd2" >
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="b" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#fdcdca #e88df1" assemblyColors="#fdcdca #e88df1" >
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="a" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#a099be #b2f0e7" assemblyColors="#a099be #b2f0e7" >
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="9" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#d7c4ec #f498f4" assemblyColors="#d7c4ec #f498f4" >
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="8" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#b58d8a #e2b1eb" assemblyColors="#b58d8a #e2b1eb" >
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#fd9ebe #b391dc" assemblyColors="#fd9ebe #b391dc" >
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#fbd4b6 #bfd0cc" assemblyColors="#fbd4b6 #bfd0cc" >
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#ada3b5 #9989a2" assemblyColors="#ada3b5 #9989a2" >
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#bcc3e6 #80b79d" assemblyColors="#bcc3e6 #80b79d" >
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="c" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#a4aa86 #a3edf8" assemblyColors="#a4aa86 #a3edf8" >
	</MachineInstruction>

	<MachineInstruction name="ISZ_I" opcode="e" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f2acab #b9e08e" assemblyColors="#f2acab #b9e08e" >
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM57b849e2" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
